{"version":3,"sources":["scripts/main.js"],"names":["spider","document","querySelector","wall","addEventListener","e","target","classList","contains","generateCoords","coordsX","coordsY","style","top","left","transform","checkCoords","coordinate","minValue","maxValue","wallStyles","getComputedStyle","spiderHalfSize","parseFloat","width","offsetX","offsetY","minCoords","maxCoords"],"mappings":";AAAA,aA4CC,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA1CD,IAAMA,EAASC,SAASC,cAAc,WAChCC,EAAOF,SAASC,cAAc,SAEpCD,SAASG,iBAAiB,QAAS,SAAAC,GAC7B,GAACA,EAAEC,OAAOC,UAAUC,SAAS,QAA7B,CAIuBC,IALW,EAAA,EAKXA,EAAeJ,GALJ,GAK/BK,EAL+B,EAAA,GAKtBC,EALsB,EAAA,GAOtCX,EAAOY,MAAMC,IAASF,GAAAA,OAAAA,EAAtB,MACAX,EAAOY,MAAME,KAAUJ,GAAAA,OAAAA,EAAvB,MACAV,EAAOY,MAAMG,UAAb,2BAGF,IAAMC,EAAc,SAACC,EAAYC,EAAUC,GACjC,QAAA,GACDF,KAAAA,EAAaC,EACTA,OAAAA,EAEJD,KAAAA,EAAaE,EACTA,OAAAA,EAET,QACSF,OAAAA,IAIb,SAASR,EAAeJ,GAChBe,IAAAA,EAAaC,iBAAiBlB,GAC9BmB,EAA8D,GAA7CC,WAAWF,iBAAiBrB,GAAQwB,OAErDd,EAAUL,EAAEoB,QACZd,EAAUN,EAAEqB,QAEZC,EAAYL,EACZM,EAAYL,WAAWH,EAAWI,OAASF,EAK1C,MAAA,CAHaN,EAAYN,EAASiB,EAAWC,GAChCZ,EAAYL,EAASgB,EAAWC","file":"main.5d3f1cd2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst spider = document.querySelector('.spider');\nconst wall = document.querySelector('.wall');\n\ndocument.addEventListener('click', e => {\n  if (!e.target.classList.contains('wall')) {\n    return;\n  }\n\n  const [coordsX, coordsY] = generateCoords(e);\n\n  spider.style.top = `${coordsY}px`;\n  spider.style.left = `${coordsX}px`;\n  spider.style.transform = `translate(-50%, -50%)`;\n});\n\nconst checkCoords = (coordinate, minValue, maxValue) => {\n  switch (true) {\n    case coordinate < minValue:\n      return minValue;\n\n    case coordinate > maxValue:\n      return maxValue;\n\n    default:\n      return coordinate;\n  }\n};\n\nfunction generateCoords(e) {\n  const wallStyles = getComputedStyle(wall);\n  const spiderHalfSize = parseFloat(getComputedStyle(spider).width) * 0.5;\n\n  const coordsX = e.offsetX;\n  const coordsY = e.offsetY;\n\n  const minCoords = spiderHalfSize;\n  const maxCoords = parseFloat(wallStyles.width) - spiderHalfSize;\n\n  const coordinateX = checkCoords(coordsX, minCoords, maxCoords);\n  const coordinateY = checkCoords(coordsY, minCoords, maxCoords);\n\n  return [coordinateX, coordinateY];\n}\n"]}